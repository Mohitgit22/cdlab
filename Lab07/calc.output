Terminals which are not used

   CHAR
   INT
   FLOAT
   ID


State 1 conflicts: 2 shift/reduce
State 4 conflicts: 1 shift/reduce
State 5 conflicts: 1 shift/reduce
State 7 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce


Grammar

    0 $accept: EL $end

    1 EL: EL E
    2   | /* empty */

    3 E: E '+' T
    4  | T

    5 T: T '*' F
    6  | F

    7 F: NUM
    8  | /* empty */


Terminals, with rules where they appear

$end (0) 0
'*' (42) 5
'+' (43) 3
error (256)
CHAR (258)
INT (259)
FLOAT (260)
ID (261)
NUM (262) 7


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
EL (11)
    on left: 1 2, on right: 0 1
E (12)
    on left: 3 4, on right: 1 3
T (13)
    on left: 5 6, on right: 3 4 5
F (14)
    on left: 7 8, on right: 5 6


state 0

    0 $accept: . EL $end

    $default  reduce using rule 2 (EL)

    EL  go to state 1


state 1

    0 $accept: EL . $end
    1 EL: EL . E

    $end  shift, and go to state 2
    NUM   shift, and go to state 3

    $end      [reduce using rule 8 (F)]
    NUM       [reduce using rule 8 (F)]
    $default  reduce using rule 8 (F)

    E  go to state 4
    T  go to state 5
    F  go to state 6


state 2

    0 $accept: EL $end .

    $default  accept


state 3

    7 F: NUM .

    $default  reduce using rule 7 (F)


state 4

    1 EL: EL E .
    3 E: E . '+' T

    '+'  shift, and go to state 7

    '+'       [reduce using rule 1 (EL)]
    $default  reduce using rule 1 (EL)


state 5

    4 E: T .
    5 T: T . '*' F

    '*'  shift, and go to state 8

    '*'       [reduce using rule 4 (E)]
    $default  reduce using rule 4 (E)


state 6

    6 T: F .

    $default  reduce using rule 6 (T)


state 7

    3 E: E '+' . T

    NUM  shift, and go to state 3

    NUM       [reduce using rule 8 (F)]
    $default  reduce using rule 8 (F)

    T  go to state 9
    F  go to state 6


state 8

    5 T: T '*' . F

    NUM  shift, and go to state 3

    NUM       [reduce using rule 8 (F)]
    $default  reduce using rule 8 (F)

    F  go to state 10


state 9

    3 E: E '+' T .
    5 T: T . '*' F

    '*'  shift, and go to state 8

    '*'       [reduce using rule 3 (E)]
    $default  reduce using rule 3 (E)


state 10

    5 T: T '*' F .

    $default  reduce using rule 5 (T)
